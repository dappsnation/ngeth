import { FormControl, FormGroup, Validators } from "@angular/forms";
import { EthValidators } from "../../form";
export class ERC1155FormTransfer extends FormGroup {
    constructor(value = {}) {
        super({
            from: new FormControl(value.from, [EthValidators.address]),
            to: new FormControl(value.to, [Validators.required, EthValidators.address]),
            tokenId: new FormControl(value.tokenId, [Validators.required]),
            amount: new FormControl(value.amount, [Validators.required, Validators.min(0)])
        });
    }
    setTokens(tokens) {
        this.addValidators(EthValidators.ownTokenAmount(tokens));
    }
}
export class ERC1155FormMint extends FormGroup {
    constructor(value = {}) {
        super({
            to: new FormControl(value.to, [Validators.required, EthValidators.address]),
            tokenId: new FormControl(value.tokenId, [Validators.required]),
            amount: new FormControl(value.amount, [Validators.required]),
            uri: new FormControl(value.uri),
            data: new FormControl(value.data)
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2V0aGVycy9hbmd1bGFyL3NyYy9saWIvdG9rZW5zL2VyYzExNTUvZm9ybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBb0IzQyxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsU0FBMEM7SUFDakYsWUFBWSxRQUFrQyxFQUFFO1FBQzlDLEtBQUssQ0FBQztZQUNKLElBQUksRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzFELEVBQUUsRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDM0UsT0FBTyxFQUFFLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDOUQsTUFBTSxFQUFFLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNoRixDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsU0FBUyxDQUFDLE1BQWlDO1FBQ3pDLElBQUksQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQzNELENBQUM7Q0FDRjtBQUdELE1BQU0sT0FBTyxlQUFnQixTQUFRLFNBQXNDO0lBQ3pFLFlBQVksUUFBOEIsRUFBRTtRQUMxQyxLQUFLLENBQUM7WUFDSixFQUFFLEVBQUUsSUFBSSxXQUFXLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzNFLE9BQU8sRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzlELE1BQU0sRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzVELEdBQUcsRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO1lBQy9CLElBQUksRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO1NBQ2xDLENBQUMsQ0FBQTtJQUNKLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcm1Db250cm9sLCBGb3JtR3JvdXAsIFZhbGlkYXRvcnMgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuaW1wb3J0IHR5cGUgeyBCaWdOdW1iZXIgfSBmcm9tICdAZXRoZXJzcHJvamVjdC9iaWdudW1iZXInO1xyXG5pbXBvcnQgeyBFdGhWYWxpZGF0b3JzIH0gZnJvbSBcIi4uLy4uL2Zvcm1cIjtcclxuaW1wb3J0IHsgVG9Gb3JtQ29udHJvbHMgfSBmcm9tIFwiLi4vdXRpbHNcIjtcclxuXHJcbmludGVyZmFjZSBFUkMxMTU1VHJhbnNmZXIge1xyXG4gIGZyb20/OiBzdHJpbmc7XHJcbiAgdG86IHN0cmluZztcclxuICB0b2tlbklkOiBudW1iZXI7XHJcbiAgYW1vdW50OiBudW1iZXI7XHJcbn1cclxuXHJcbmludGVyZmFjZSBFUkMxMTU1TWludCB7XHJcbiAgdG86IHN0cmluZztcclxuICB0b2tlbklkOiBudW1iZXI7XHJcbiAgYW1vdW50OiBudW1iZXI7XHJcbiAgZGF0YT86IHN0cmluZztcclxuICB1cmk/OiBzdHJpbmc7XHJcbn1cclxuXHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIEVSQzExNTVGb3JtVHJhbnNmZXIgZXh0ZW5kcyBGb3JtR3JvdXA8VG9Gb3JtQ29udHJvbHM8RVJDMTE1NVRyYW5zZmVyPj4ge1xyXG4gIGNvbnN0cnVjdG9yKHZhbHVlOiBQYXJ0aWFsPEVSQzExNTVUcmFuc2Zlcj4gPSB7fSkge1xyXG4gICAgc3VwZXIoe1xyXG4gICAgICBmcm9tOiBuZXcgRm9ybUNvbnRyb2wodmFsdWUuZnJvbSwgW0V0aFZhbGlkYXRvcnMuYWRkcmVzc10pLFxyXG4gICAgICB0bzogbmV3IEZvcm1Db250cm9sKHZhbHVlLnRvLCBbVmFsaWRhdG9ycy5yZXF1aXJlZCwgRXRoVmFsaWRhdG9ycy5hZGRyZXNzXSksXHJcbiAgICAgIHRva2VuSWQ6IG5ldyBGb3JtQ29udHJvbCh2YWx1ZS50b2tlbklkLCBbVmFsaWRhdG9ycy5yZXF1aXJlZF0pLFxyXG4gICAgICBhbW91bnQ6IG5ldyBGb3JtQ29udHJvbCh2YWx1ZS5hbW91bnQsIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBWYWxpZGF0b3JzLm1pbigwKV0pXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgc2V0VG9rZW5zKHRva2VuczogUmVjb3JkPHN0cmluZywgQmlnTnVtYmVyPikge1xyXG4gICAgdGhpcy5hZGRWYWxpZGF0b3JzKEV0aFZhbGlkYXRvcnMub3duVG9rZW5BbW91bnQodG9rZW5zKSk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIEVSQzExNTVGb3JtTWludCBleHRlbmRzIEZvcm1Hcm91cDxUb0Zvcm1Db250cm9sczxFUkMxMTU1TWludD4+IHtcclxuICBjb25zdHJ1Y3Rvcih2YWx1ZTogUGFydGlhbDxFUkMxMTU1TWludD4gPSB7fSkge1xyXG4gICAgc3VwZXIoe1xyXG4gICAgICB0bzogbmV3IEZvcm1Db250cm9sKHZhbHVlLnRvLCBbVmFsaWRhdG9ycy5yZXF1aXJlZCwgRXRoVmFsaWRhdG9ycy5hZGRyZXNzXSksXHJcbiAgICAgIHRva2VuSWQ6IG5ldyBGb3JtQ29udHJvbCh2YWx1ZS50b2tlbklkLCBbVmFsaWRhdG9ycy5yZXF1aXJlZF0pLFxyXG4gICAgICBhbW91bnQ6IG5ldyBGb3JtQ29udHJvbCh2YWx1ZS5hbW91bnQsIFtWYWxpZGF0b3JzLnJlcXVpcmVkXSksXHJcbiAgICAgIHVyaTogbmV3IEZvcm1Db250cm9sKHZhbHVlLnVyaSksXHJcbiAgICAgIGRhdGE6IG5ldyBGb3JtQ29udHJvbCh2YWx1ZS5kYXRhKVxyXG4gICAgfSlcclxuICB9XHJcbn0iXX0=