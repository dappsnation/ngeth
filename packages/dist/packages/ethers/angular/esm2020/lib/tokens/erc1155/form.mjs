import { FormControl, FormGroup, Validators } from "@angular/forms";
import { EthValidators } from "../../form";
export class ERC1155FormTransfer extends FormGroup {
    constructor(value = {}) {
        super({
            from: new FormControl(value.from, [EthValidators.address]),
            to: new FormControl(value.to, [Validators.required, EthValidators.address]),
            tokenId: new FormControl(value.tokenId, [Validators.required]),
            amount: new FormControl(value.amount, [Validators.required, Validators.min(0)])
        });
    }
    setTokens(tokens) {
        this.addValidators(EthValidators.ownTokenAmount(tokens));
    }
}
export class ERC1155FormMint extends FormGroup {
    constructor(value = {}) {
        super({
            to: new FormControl(value.to, [Validators.required, EthValidators.address]),
            tokenId: new FormControl(value.tokenId, [Validators.required]),
            amount: new FormControl(value.amount, [Validators.required]),
            uri: new FormControl(value.uri),
            data: new FormControl(value.data)
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2V0aGVycy9hbmd1bGFyL3NyYy9saWIvdG9rZW5zL2VyYzExNTUvZm9ybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVwRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBb0IzQyxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsU0FBMEM7SUFDakYsWUFBWSxRQUFrQyxFQUFFO1FBQzlDLEtBQUssQ0FBQztZQUNKLElBQUksRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzFELEVBQUUsRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDM0UsT0FBTyxFQUFFLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDOUQsTUFBTSxFQUFFLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNoRixDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsU0FBUyxDQUFDLE1BQWlDO1FBQ3pDLElBQUksQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQzNELENBQUM7Q0FDRjtBQUdELE1BQU0sT0FBTyxlQUFnQixTQUFRLFNBQXNDO0lBQ3pFLFlBQVksUUFBOEIsRUFBRTtRQUMxQyxLQUFLLENBQUM7WUFDSixFQUFFLEVBQUUsSUFBSSxXQUFXLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzNFLE9BQU8sRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzlELE1BQU0sRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzVELEdBQUcsRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO1lBQy9CLElBQUksRUFBRSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO1NBQ2xDLENBQUMsQ0FBQTtJQUNKLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcm1Db250cm9sLCBGb3JtR3JvdXAsIFZhbGlkYXRvcnMgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB0eXBlIHsgQmlnTnVtYmVyIH0gZnJvbSAnQGV0aGVyc3Byb2plY3QvYmlnbnVtYmVyJztcbmltcG9ydCB7IEV0aFZhbGlkYXRvcnMgfSBmcm9tIFwiLi4vLi4vZm9ybVwiO1xuaW1wb3J0IHsgVG9Gb3JtQ29udHJvbHMgfSBmcm9tIFwiLi4vdXRpbHNcIjtcblxuaW50ZXJmYWNlIEVSQzExNTVUcmFuc2ZlciB7XG4gIGZyb20/OiBzdHJpbmc7XG4gIHRvOiBzdHJpbmc7XG4gIHRva2VuSWQ6IG51bWJlcjtcbiAgYW1vdW50OiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBFUkMxMTU1TWludCB7XG4gIHRvOiBzdHJpbmc7XG4gIHRva2VuSWQ6IG51bWJlcjtcbiAgYW1vdW50OiBudW1iZXI7XG4gIGRhdGE/OiBzdHJpbmc7XG4gIHVyaT86IHN0cmluZztcbn1cblxuXG5cbmV4cG9ydCBjbGFzcyBFUkMxMTU1Rm9ybVRyYW5zZmVyIGV4dGVuZHMgRm9ybUdyb3VwPFRvRm9ybUNvbnRyb2xzPEVSQzExNTVUcmFuc2Zlcj4+IHtcbiAgY29uc3RydWN0b3IodmFsdWU6IFBhcnRpYWw8RVJDMTE1NVRyYW5zZmVyPiA9IHt9KSB7XG4gICAgc3VwZXIoe1xuICAgICAgZnJvbTogbmV3IEZvcm1Db250cm9sKHZhbHVlLmZyb20sIFtFdGhWYWxpZGF0b3JzLmFkZHJlc3NdKSxcbiAgICAgIHRvOiBuZXcgRm9ybUNvbnRyb2wodmFsdWUudG8sIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBFdGhWYWxpZGF0b3JzLmFkZHJlc3NdKSxcbiAgICAgIHRva2VuSWQ6IG5ldyBGb3JtQ29udHJvbCh2YWx1ZS50b2tlbklkLCBbVmFsaWRhdG9ycy5yZXF1aXJlZF0pLFxuICAgICAgYW1vdW50OiBuZXcgRm9ybUNvbnRyb2wodmFsdWUuYW1vdW50LCBbVmFsaWRhdG9ycy5yZXF1aXJlZCwgVmFsaWRhdG9ycy5taW4oMCldKVxuICAgIH0pXG4gIH1cblxuICBzZXRUb2tlbnModG9rZW5zOiBSZWNvcmQ8c3RyaW5nLCBCaWdOdW1iZXI+KSB7XG4gICAgdGhpcy5hZGRWYWxpZGF0b3JzKEV0aFZhbGlkYXRvcnMub3duVG9rZW5BbW91bnQodG9rZW5zKSk7XG4gIH1cbn1cblxuXG5leHBvcnQgY2xhc3MgRVJDMTE1NUZvcm1NaW50IGV4dGVuZHMgRm9ybUdyb3VwPFRvRm9ybUNvbnRyb2xzPEVSQzExNTVNaW50Pj4ge1xuICBjb25zdHJ1Y3Rvcih2YWx1ZTogUGFydGlhbDxFUkMxMTU1TWludD4gPSB7fSkge1xuICAgIHN1cGVyKHtcbiAgICAgIHRvOiBuZXcgRm9ybUNvbnRyb2wodmFsdWUudG8sIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBFdGhWYWxpZGF0b3JzLmFkZHJlc3NdKSxcbiAgICAgIHRva2VuSWQ6IG5ldyBGb3JtQ29udHJvbCh2YWx1ZS50b2tlbklkLCBbVmFsaWRhdG9ycy5yZXF1aXJlZF0pLFxuICAgICAgYW1vdW50OiBuZXcgRm9ybUNvbnRyb2wodmFsdWUuYW1vdW50LCBbVmFsaWRhdG9ycy5yZXF1aXJlZF0pLFxuICAgICAgdXJpOiBuZXcgRm9ybUNvbnRyb2wodmFsdWUudXJpKSxcbiAgICAgIGRhdGE6IG5ldyBGb3JtQ29udHJvbCh2YWx1ZS5kYXRhKVxuICAgIH0pXG4gIH1cbn0iXX0=