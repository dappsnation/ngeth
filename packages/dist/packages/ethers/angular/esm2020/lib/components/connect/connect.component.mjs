import { Component, ChangeDetectionStrategy, ViewChild, ElementRef } from '@angular/core';
import { ERC1193 } from '../../erc1193';
import * as i0 from "@angular/core";
import * as i1 from "../../erc1193";
import * as i2 from "@angular/common";
export class EthConnectComponent {
    constructor(erc1193) {
        this.erc1193 = erc1193;
        this.wallets = this.erc1193.wallets;
        this.account$ = this.erc1193.account$;
        this.connected$ = this.erc1193.connected$;
    }
    select(wallet) {
        this.erc1193.selectWallet(wallet);
    }
    enable() {
        if (this.wallets.length === 1)
            return this.erc1193.enable();
        return this.selectDialog.nativeElement.showModal();
    }
}
EthConnectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.2", ngImport: i0, type: EthConnectComponent, deps: [{ token: i1.ERC1193 }], target: i0.ɵɵFactoryTarget.Component });
EthConnectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.2", type: EthConnectComponent, selector: "eth-connect", viewQueries: [{ propertyName: "selectDialog", first: true, predicate: ["selectDialog"], descendants: true }], ngImport: i0, template: "<ng-container *ngIf=\"wallets.length; else noProvider\">\n  <ng-container *ngIf=\"account$ | async as account; else connect\">\n    {{ account }}\n  </ng-container>\n</ng-container>\n\n<ng-template #noProvider>\n  <button>Create an account</button>\n</ng-template>\n<ng-template #connect>\n  <button (click)=\"enable()\">Select Wallet</button>\n</ng-template>\n\n<dialog #selectDialog>\n  <form method=\"dialog\">\n    <header>\n      <h2>Providers</h2>\n      <button>close</button>\n    </header>\n    <ul>\n      <li *ngFor=\"let wallet of wallets\">\n        <button (click)=\"select(wallet)\">{{ wallet.label }}</button>\n      </li>\n    </ul>\n  </form>\n</dialog>", styles: ["dialog{padding:0;border-radius:var(--size-1);background-color:var(--background-1);border:1px solid var(--foreground-4)}dialog header{display:flex;align-items:center;padding:var(--size-2);background-color:var(--background-0)}dialog ul{margin:0;padding:var(--size-2);list-style:none;display:grid;gap:var(--size-2)}dialog ul li{margin:0}dialog footer{display:flex;align-items:center;justify-content:flex-end;padding:var(--size-2)}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.2", ngImport: i0, type: EthConnectComponent, decorators: [{
            type: Component,
            args: [{ selector: 'eth-connect', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"wallets.length; else noProvider\">\n  <ng-container *ngIf=\"account$ | async as account; else connect\">\n    {{ account }}\n  </ng-container>\n</ng-container>\n\n<ng-template #noProvider>\n  <button>Create an account</button>\n</ng-template>\n<ng-template #connect>\n  <button (click)=\"enable()\">Select Wallet</button>\n</ng-template>\n\n<dialog #selectDialog>\n  <form method=\"dialog\">\n    <header>\n      <h2>Providers</h2>\n      <button>close</button>\n    </header>\n    <ul>\n      <li *ngFor=\"let wallet of wallets\">\n        <button (click)=\"select(wallet)\">{{ wallet.label }}</button>\n      </li>\n    </ul>\n  </form>\n</dialog>", styles: ["dialog{padding:0;border-radius:var(--size-1);background-color:var(--background-1);border:1px solid var(--foreground-4)}dialog header{display:flex;align-items:center;padding:var(--size-2);background-color:var(--background-0)}dialog ul{margin:0;padding:var(--size-2);list-style:none;display:grid;gap:var(--size-2)}dialog ul li{margin:0}dialog footer{display:flex;align-items:center;justify-content:flex-end;padding:var(--size-2)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ERC1193 }]; }, propDecorators: { selectDialog: [{
                type: ViewChild,
                args: ['selectDialog']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ubmVjdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ldGhlcnMvYW5ndWxhci9zcmMvbGliL2NvbXBvbmVudHMvY29ubmVjdC9jb25uZWN0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2V0aGVycy9hbmd1bGFyL3NyYy9saWIvY29tcG9uZW50cy9jb25uZWN0L2Nvbm5lY3QuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBRSxPQUFPLEVBQWlCLE1BQU0sZUFBZSxDQUFDOzs7O0FBWXZELE1BQU0sT0FBTyxtQkFBbUI7SUFROUIsWUFDVSxPQUFnQjtRQUFoQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBTDFCLFlBQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUMvQixhQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDakMsZUFBVSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDO0lBSWpDLENBQUM7SUFFTCxNQUFNLENBQUMsTUFBcUI7UUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELE1BQU07UUFDSixJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxLQUFLLENBQUM7WUFBRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDNUQsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNyRCxDQUFDOztnSEFuQlUsbUJBQW1CO29HQUFuQixtQkFBbUIsaUtDYmhDLGlxQkF5QlM7MkZEWkksbUJBQW1CO2tCQU4vQixTQUFTOytCQUNFLGFBQWEsbUJBR04sdUJBQXVCLENBQUMsTUFBTTs4RkFJcEIsWUFBWTtzQkFBdEMsU0FBUzt1QkFBQyxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgVmlld0NoaWxkLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFUkMxMTkzLCBXYWxsZXRQcm9maWxlIH0gZnJvbSAnLi4vLi4vZXJjMTE5Myc7XG5cbmludGVyZmFjZSBEaWFsb2dFbGVtZW50IGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICBzaG93TW9kYWw6ICgpID0+IHZvaWQ7ICBcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZXRoLWNvbm5lY3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29ubmVjdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2Nvbm5lY3QuY29tcG9uZW50LnNjc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgRXRoQ29ubmVjdENvbXBvbmVudCB7XG5cbiAgQFZpZXdDaGlsZCgnc2VsZWN0RGlhbG9nJykgc2VsZWN0RGlhbG9nITogRWxlbWVudFJlZjxEaWFsb2dFbGVtZW50PjtcblxuICB3YWxsZXRzID0gdGhpcy5lcmMxMTkzLndhbGxldHM7XG4gIGFjY291bnQkID0gdGhpcy5lcmMxMTkzLmFjY291bnQkO1xuICBjb25uZWN0ZWQkID0gdGhpcy5lcmMxMTkzLmNvbm5lY3RlZCQ7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBlcmMxMTkzOiBFUkMxMTkzXG4gICkgeyB9XG5cbiAgc2VsZWN0KHdhbGxldDogV2FsbGV0UHJvZmlsZSkge1xuICAgIHRoaXMuZXJjMTE5My5zZWxlY3RXYWxsZXQod2FsbGV0KTtcbiAgfVxuXG4gIGVuYWJsZSgpIHtcbiAgICBpZiAodGhpcy53YWxsZXRzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIHRoaXMuZXJjMTE5My5lbmFibGUoKTtcbiAgICByZXR1cm4gdGhpcy5zZWxlY3REaWFsb2cubmF0aXZlRWxlbWVudC5zaG93TW9kYWwoKTtcbiAgfVxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cIndhbGxldHMubGVuZ3RoOyBlbHNlIG5vUHJvdmlkZXJcIj5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImFjY291bnQkIHwgYXN5bmMgYXMgYWNjb3VudDsgZWxzZSBjb25uZWN0XCI+XG4gICAge3sgYWNjb3VudCB9fVxuICA8L25nLWNvbnRhaW5lcj5cbjwvbmctY29udGFpbmVyPlxuXG48bmctdGVtcGxhdGUgI25vUHJvdmlkZXI+XG4gIDxidXR0b24+Q3JlYXRlIGFuIGFjY291bnQ8L2J1dHRvbj5cbjwvbmctdGVtcGxhdGU+XG48bmctdGVtcGxhdGUgI2Nvbm5lY3Q+XG4gIDxidXR0b24gKGNsaWNrKT1cImVuYWJsZSgpXCI+U2VsZWN0IFdhbGxldDwvYnV0dG9uPlxuPC9uZy10ZW1wbGF0ZT5cblxuPGRpYWxvZyAjc2VsZWN0RGlhbG9nPlxuICA8Zm9ybSBtZXRob2Q9XCJkaWFsb2dcIj5cbiAgICA8aGVhZGVyPlxuICAgICAgPGgyPlByb3ZpZGVyczwvaDI+XG4gICAgICA8YnV0dG9uPmNsb3NlPC9idXR0b24+XG4gICAgPC9oZWFkZXI+XG4gICAgPHVsPlxuICAgICAgPGxpICpuZ0Zvcj1cImxldCB3YWxsZXQgb2Ygd2FsbGV0c1wiPlxuICAgICAgICA8YnV0dG9uIChjbGljayk9XCJzZWxlY3Qod2FsbGV0KVwiPnt7IHdhbGxldC5sYWJlbCB9fTwvYnV0dG9uPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICA8L2Zvcm0+XG48L2RpYWxvZz4iXX0=