/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Playground, PlaygroundInterface } from "../Playground";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "eventName",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "LogEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "eventName",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "LogEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_eventName",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "emitEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_eventName",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_isTrue",
        type: "bool",
      },
    ],
    name: "emitEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_eventName",
        type: "bytes32",
      },
    ],
    name: "getEvent",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610407806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636d717594146100515780638c172fa21461006d578063f10b97b614610089578063f56fb86b146100b9575b600080fd5b61006b6004803603810190610066919061020c565b6100d5565b005b6100876004803603810190610082919061024c565b610112565b005b6100a3600480360381019061009e9190610279565b610115565b6040516100b091906102bf565b60405180910390f35b6100d360048036038101906100ce9190610312565b610136565b005b7f7465347ef066ca479e5437a3cf221261cca1fccc04005bd5af9ee2d15ca2a7728282604051610106929190610370565b60405180910390a15050565b50565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b7fde917497ceaa39dc0a52414d0578e7c571f4bfaf40af19cc4e401b6d2f26c63082826040516101679291906103a8565b60405180910390a15050565b600080fd5b6000819050919050565b61018b81610178565b811461019657600080fd5b50565b6000813590506101a881610182565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d9826101ae565b9050919050565b6101e9816101ce565b81146101f457600080fd5b50565b600081359050610206816101e0565b92915050565b6000806040838503121561022357610222610173565b5b600061023185828601610199565b9250506020610242858286016101f7565b9150509250929050565b60006020828403121561026257610261610173565b5b600061027084828501610199565b91505092915050565b60006020828403121561028f5761028e610173565b5b600061029d848285016101f7565b91505092915050565b6000819050919050565b6102b9816102a6565b82525050565b60006020820190506102d460008301846102b0565b92915050565b60008115159050919050565b6102ef816102da565b81146102fa57600080fd5b50565b60008135905061030c816102e6565b92915050565b6000806040838503121561032957610328610173565b5b600061033785828601610199565b9250506020610348858286016102fd565b9150509250929050565b61035b81610178565b82525050565b61036a816101ce565b82525050565b60006040820190506103856000830185610352565b6103926020830184610361565b9392505050565b6103a2816102da565b82525050565b60006040820190506103bd6000830185610352565b6103ca6020830184610399565b939250505056fea264697066735822122091f936feb1814bb2dc6af85530292cc25dd6cd46bbe676c8faad4d536132abe364736f6c634300080b0033";

export class Playground__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Playground> {
    return super.deploy(overrides || {}) as Promise<Playground>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Playground {
    return super.attach(address) as Playground;
  }
  connect(signer: Signer): Playground__factory {
    return super.connect(signer) as Playground__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlaygroundInterface {
    return new utils.Interface(_abi) as PlaygroundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Playground {
    return new Contract(address, _abi, signerOrProvider) as Playground;
  }
}
