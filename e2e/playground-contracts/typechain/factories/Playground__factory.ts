/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Playground, PlaygroundInterface } from "../Playground";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "eventName",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isTrue",
        type: "bool",
      },
    ],
    name: "LogEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "eventName",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "LogEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_eventName",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "emitEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_eventName",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_isTrue",
        type: "bool",
      },
    ],
    name: "emitEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_eventName",
        type: "bytes32",
      },
    ],
    name: "getEvent",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103f2806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636d717594146100515780638c172fa21461006d578063f10b97b614610089578063f56fb86b146100b9575b600080fd5b61006b60048036038101906100669190610204565b6100d5565b005b610087600480360381019061008291906101db565b610112565b005b6100a3600480360381019061009e91906101b2565b610115565b6040516100b0919061030a565b60405180910390f35b6100d360048036038101906100ce9190610240565b610136565b005b7f7465347ef066ca479e5437a3cf221261cca1fccc04005bd5af9ee2d15ca2a77282826040516101069291906102b8565b60405180910390a15050565b50565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b7fde917497ceaa39dc0a52414d0578e7c571f4bfaf40af19cc4e401b6d2f26c63082826040516101679291906102e1565b60405180910390a15050565b60008135905061018281610377565b92915050565b6000813590506101978161038e565b92915050565b6000813590506101ac816103a5565b92915050565b6000602082840312156101c457600080fd5b60006101d284828501610173565b91505092915050565b6000602082840312156101ed57600080fd5b60006101fb8482850161019d565b91505092915050565b6000806040838503121561021757600080fd5b60006102258582860161019d565b925050602061023685828601610173565b9150509250929050565b6000806040838503121561025357600080fd5b60006102618582860161019d565b925050602061027285828601610188565b9150509250929050565b61028581610325565b82525050565b61029481610337565b82525050565b6102a381610343565b82525050565b6102b28161036d565b82525050565b60006040820190506102cd600083018561029a565b6102da602083018461027c565b9392505050565b60006040820190506102f6600083018561029a565b610303602083018461028b565b9392505050565b600060208201905061031f60008301846102a9565b92915050565b60006103308261034d565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61038081610325565b811461038b57600080fd5b50565b61039781610337565b81146103a257600080fd5b50565b6103ae81610343565b81146103b957600080fd5b5056fea2646970667358221220efc8302eaccba8f09e8a2260b81565020f4f747461d91f3bb5762bccb19cf59864736f6c63430008020033";

export class Playground__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Playground> {
    return super.deploy(overrides || {}) as Promise<Playground>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Playground {
    return super.attach(address) as Playground;
  }
  connect(signer: Signer): Playground__factory {
    return super.connect(signer) as Playground__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlaygroundInterface {
    return new utils.Interface(_abi) as PlaygroundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Playground {
    return new Contract(address, _abi, signerOrProvider) as Playground;
  }
}
